/* ===============================================
# Sassのミックスインを記述するファイルです
=============================================== */
@use './variables' as *;

/* ===============================================
# メディアクエリ用mixin

使い方
@include mq(sm) {
  ...scssのコード
}
↓
@media screen and (min-width: 520px) {
  ...scssのコード
}
=============================================== */
$breakpoint: (
  sm: "screen and (min-width: 520px)",
  lg: "screen and (min-width: 960px)",
);

@mixin mq($bp) {
  @media #{map-get($breakpoint, $bp)} {
    @content;
  }
}


/* ===============================================
# XDデータからline-heightを計算するmixin
@param Number $pixels 文字サイズ
@param Number $XDHeight XD上のline-height

使い方
@include calcLineHeight(16, 24); → line-height: 1.5;
=============================================== */
@mixin calcLineHeight($pixels , $XDHeight) {
  line-height: calc($XDHeight / $pixels);
}

/* ===============================================
# XDデータからletter-spacingを計算するmixin
@param Number XD上のletter-spacing

使い方
letter-spacing: calcLetterSpacing(100) → letter-spacing: 0.1em;
=============================================== */
@function calcLetterSpacing($XDSpacing) {
  @return calc($XDSpacing / 1000)+em;
}

/* ===============================================
# line-heightの不要な余白を打ち消す
@param Number XD上のline-height

使い方
@include cutExtraLineHeight(100);
=============================================== */
@mixin cutExtraLineHeight($line-height) {
  &::before {
    display: block;
    width: 0;
    height: 0;
    margin-top: calc((1 - calcLetterSpacing(#{$line-height})) * .5em);
    content: "";
  }

  &::after {
    display: block;
    width: 0;
    height: 0;
    margin-bottom: calc((1 - calcLetterSpacing(#{$line-height})) * .5em);
    content: "";
  }
}